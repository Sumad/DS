Fstat <- ((samples.norm1.sd / 1)^2 ) / (samples.norm2.sd / 2)^2
Fstat.order <- sort(Fstat)
prob <- df(x = Fstat.order ,df1 = 90,df2 = 100 )
p4 <- plot(x = Fstat.order, y = prob,type = "l",main = "F dist. with df1 90 and df2 100")
knitr::opts_chunk$set(echo = TRUE)
z = 2.9-2.6/(0.5/sqrt(50))
z
z = (2.9-2.6)/(0.5/sqrt(50))
z
z.crit = pnorm(q = 0.95,mean = 0,sd = 1,lower.tail = TRUE)
r.norm <- rnorm(n = 50)
z = (2.9-2.6)/(0.5/sqrt(50))
z.crit = pnorm(q = 0.95,mean = 0,sd = 1,lower.tail = TRUE)
r.norm <- sort(rnorm(n = 50))
f.nrom <- dnorm(x = r.norm,mean = 0,sd = 1 )
plot(x = r.norm,y = f.norm)
f.nrom <- dnorm(x = r.norm, mean = 0,sd = 1 )
f.norm
r.norm <- sort(rnorm(n = 50))
f.nrom <- dnorm(x = r.norm, mean = 0,sd = 1 )
f.norm
f.norm <- dnorm(x = r.norm, mean = 0,sd = 1 )
plot(x = r.norm,y = f.norm)
abline(v = c(z,z.crit))
z
z.crit
plot(x = r.norm,y = f.norm)
abline(v = z,z.crit)
z = (2.9-2.6)/(0.5/sqrt(50))
z.crit = pnorm(q = 0.95,mean = 0,sd = 1,lower.tail = TRUE)
r.norm <- sort(rnorm(n = 50))
f.norm <- dnorm(x = r.norm, mean = 0,sd = 1 )
plot(x = r.norm,y = f.norm)
abline(v = c(z,z.crit))
plot(x = r.norm,y = f.norm)
abline(v = z, lty = 2
abline(v = z.crit, lty = 1)
plot(x = r.norm,y = f.norm)
abline(v = z, lty = 2)
abline(v = z.crit, lty = 1)
?abline
plot(x = r.norm,y = f.norm)
abline(v = seq(z,z.crit), lty = c(1,2))
abline(h = -1:5, v = -2:3, col = "lightgray", lty = 3)
abline(a = 1, b = 2, col = 2)
plot(x = r.norm,y = f.norm)
abline(v = seq(z.crit,z), lty = c(1,2))
z = (2.9-2.6)/(0.5/sqrt(50))
z.crit = pnorm(q = 0.95,mean = 0,sd = 1,lower.tail = TRUE)
r.norm <- sort(rnorm(n = 50))
f.norm <- dnorm(x = r.norm, mean = 0,sd = 1 )
plot(x = r.norm,y = f.norm)
abline(v = seq(z.crit,z), lty = c(1,2))
plot(x = r.norm,y = f.norm,xlim = c(-4,4))
abline(v = seq(z.crit,z), lty = c(1,2))
plot(x = r.norm,y = f.norm,xlim = c(-4,4))
abline(v = c(z.crit,z), lty = c(1,2))
plot(x = r.norm,y = f.norm,xlim = c(-4,4))
abline(v = c(z.crit,z), lty = c(2,1))
?abline
?text
plot(x = r.norm,y = f.norm,xlim = c(-4,4))
abline(v = c(z.crit,z), lty = c(2,1))
text(x = c(z.crit,z),y = c(0,0),labels = c("z.crit","z"))
plot(x = r.norm,y = f.norm,xlim = c(-4,4))
abline(v = c(z.crit,z), lty = c(2,1))
text(x = c(z.crit,z),y = c(0.2,0.2),labels = c("z.crit","z"))
# To picture ths values
r.norm <- sort(rnorm(n = 50))
f.norm <- dnorm(x = r.norm, mean = 0,sd = 1 )
plot(x = r.norm,y = f.norm,xlim = c(-4,4))
abline(v = c(z.crit,z), lty = c(2,1))
text(x = c(z.crit,z),y = c(0.005,0.005),labels = c("z.crit","z"))
# Convert the sampling distribution with mean 2.6 an sd 0.5 to t distribution
# Then convert sample observation to t stat. on this same scale
# i.e
t = (2.9-2.6)/(0.5/sqrt(50))
t.crit = pt(q = 0.95,df = 49,lower.tail = TRUE) # df 49 as s was used
# To picture ths values
r.t <- sort(rt(n = 50,df = 49))
freq.t <- dt(x = r.t, df = 49 )
plot(x = r.t,y = freq.t,xlim = c(-4,4))
abline(v = c(t.crit,t), lty = c(2,1))
text(x = c(t.crit,t),y = c(0.005,0.005),labels = c("t.crit","t"))
# Convert the sampling distribution with mean 2.6 an sd 0.5 to t distribution
# Then convert sample observation to t stat. on this same scale
# i.e
t = (2.9-2.6)/(0.5/sqrt(50))
t.crit = pt(q = 0.95,df = 49,lower.tail = TRUE) # df 49 as s was used
# To picture ths values
r.t <- sort(rt(n = 50,df = 49))
freq.t <- dt(x = r.t, df = 49 )
plot(x = r.t,y = freq.t,xlim = c(-4,4))
abline(v = c(t.crit,t), lty = c(2,1))
text(x = c(t.crit,t),y = c(0.05,0.05),labels = c("t.crit","t"))
z.crit
qnorm(p = 0.95,mean = 0,sd = 1)
qnorm(p = 0.95,mean = 0,sd = 1,lower.tail = TRUE)
qnorm(p = 0.95,mean = 0,sd = 1,lower.tail = FALSE)
z.crit = qnorm(q = 0.95,mean = 0,sd = 1,lower.tail = TRUE)
z.crit = qnorm(p = 0.95,mean = 0,sd = 1,lower.tail = TRUE)
z.crit
# To picture ths values
r.norm <- sort(rnorm(n = 50))
f.norm <- dnorm(x = r.norm, mean = 0,sd = 1 )
plot(x = r.norm,y = f.norm,xlim = c(-4,4))
abline(v = c(z.crit,z), lty = c(2,1))
text(x = c(z.crit,z),y = c(0.005,0.005),labels = c("z.crit","z"))
z.crit = qnorm(p = 0.975,mean = 0,sd = 1,lower.tail = TRUE)
z.crit
z.crit = qnorm(p = 0.95,mean = 0,sd = 1,lower.tail = TRUE)
t.crit = qt(p = 0.95,df = 49,lower.tail = TRUE) # df 49 as s was used
r.t <- sort(rt(n = 50,df = 49))
freq.t <- dt(x = r.t, df = 49 )
plot(x = r.t,y = freq.t,xlim = c(-4,4))
abline(v = c(t.crit,t), lty = c(2,1))
text(x = c(t.crit,t),y = c(0.05,0.05),labels = c("t.crit","t"))
(1115-1027)/(45/sqrt(25))
qt(p = 0.025,df = 24,lower.tail = TRUE)
# Convert the sampling distribution with mean 2.6 an sd 0.5 to t distribution
# Then convert sample observation to t stat. on this same scale
# i.e
t = (2.9-2.6)/(0.5/sqrt(50))
t.crit = qt(p = 0.95,df = 49,lower.tail = TRUE) # df 49 as s was used
# To picture ths values
r.t <- sort(rt(n = 50,df = 49))
freq.t <- dt(x = r.t, df = 49 )
plot(x = r.t,y = freq.t,xlim = c(-4,4))
abline(v = c(t.crit,t), lty = c(2,1))
text(x = c(t.crit,t),y = c(0.05,0.05),labels = c("t.crit","t"))
sd.pop.pooled <- sqrt((1.5^2 * (15-1) + 1.9^2 * (15-1)) / (15-1 + 15 -1 ))
std.error <- sqrt(sd.pop.pooled ^2 / 15 +  sd.pop.pooled ^2 / 15)
rm(list = ls())
sd.pop.pooled <- sqrt((1.5^2 * (15-1) + 1.9^2 * (15-1)) / (15-1 + 15 -1 ))
std.error <- sqrt(sd.pop.pooled ^2 / 15 +  sd.pop.pooled ^2 / 15)
t.crit <-  qt(p = c(0.025,0.0975),df = df,lower.tail = TRUE)
sd.pop.pooled <- sqrt((1.5^2 * (15-1) + 1.9^2 * (15-1)) / (15-1 + 15 -1 ))
std.error <- sqrt(sd.pop.pooled ^2 / 15 +  sd.pop.pooled ^2 / 15)
df <- (15 - 1) + (15 - 1)
# Take significance level as 5%
# Under null hypothesis, the difference of samples means is ditributed with t, with mean as 0
# and std. deviation as std.error
# The t statistic of observed sample differences
t <- (9.3 - 7.9) / std.error
t.crit <-  qt(p = c(0.025,0.0975),df = df,lower.tail = TRUE)
sd.pop.pooled <- sqrt((1.5^2 * (15-1) + 1.9^2 * (15-1)) / (15-1 + 15 -1 ))
std.error <- sqrt(sd.pop.pooled ^2 / 15 +  sd.pop.pooled ^2 / 15)
df <- (15 - 1) + (15 - 1)
# Take significance level as 5%
# Under null hypothesis, the difference of samples means is ditributed with t, with mean as 0
# and std. deviation as std.error
# The t statistic of observed sample differences
t <- (9.3 - 7.9) / std.error
t.crit <-  qt(p = 0.095,df = df,lower.tail = TRUE)
sd.pop.pooled <- sqrt((1.5^2 * (15-1) + 1.9^2 * (15-1)) / (15-1 + 15 -1 ))
std.error <- sqrt(sd.pop.pooled ^2 / 15 +  sd.pop.pooled ^2 / 15)
df <- (15 - 1) + (15 - 1)
# Take significance level as 5%
# Under null hypothesis, the difference of samples means is ditributed with t, with mean as 0
# and std. deviation as std.error
# The t statistic of observed sample differences
t <- (9.3 - 7.9) / std.error
t.crit <-  qt(p = 0.95,df = df,lower.tail = TRUE)
print(t,t.crit)
print(c(t,t.crit))
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 40,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
x <- rf(n = 100,df1 = 70,df2 = 50)
mean(x)
pf(q = 1,df1 = 70,df2=50,lower.tail = TRUE)
s1 <- c(214,185,214,186,182,220,220)
s2 <-  c(171,185,236,175,227,198,172)
sd.s1<- sd(s1)
sd.s2 <-  sd(s2)
df1 <- 6
df2 <- 6
# Under null hypothesis, Sampling distribution or test statistic is F, df1 = df2 =6
# Two tailed test, critical points can be computes using signficance level of 5%
f.stat <- (sd.s1/sd.s2)^2
f.citical.right <- qf(p = 0.975,df1 = df1,df2 = df2)
f.citical.left <- qf(p = 0.025,df1 = df1,df2 = df2)
# For 7 days footfalls are recorded
s1 <- c(214,185,214,186,182,220,220)
s2 <-  c(171,185,236,175,227,198,172)
sd.s1<- sd(s1)
sd.s2 <-  sd(s2)
df1 <- 6
df2 <- 6
# Under null hypothesis, Sampling distribution or test statistic is F, df1 = df2 =6
# Two tailed test, critical points can be computes using signficance level of 5%
f.stat <- (sd.s1/sd.s2)^2
f.citical.right <- qf(p = 0.975,df1 = df1,df2 = df2)
f.citical.left <- qf(p = 0.025,df1 = df1,df2 = df2)
# For visualization
x <- sort(rf(n = 100,df1 = df1,df2 = df2))
f.freq <- df(x = x,df1 = df1, df2 =df2)
plot(x = x,y = f.freq,type = "p")
abline(v = c(f.citical.left,f.citical.right,f.stat))
# For 7 days footfalls are recorded
s1 <- c(214,185,214,186,182,220,220)
s2 <-  c(171,185,236,175,227,198,172)
sd.s1<- sd(s1)
sd.s2 <-  sd(s2)
df1 <- 6
df2 <- 6
# Under null hypothesis, Sampling distribution or test statistic is F, df1 = df2 =6
# Two tailed test, critical points can be computes using signficance level of 5%
f.stat <- (sd.s1/sd.s2)^2
f.citical.right <- qf(p = 0.975,df1 = df1,df2 = df2)
f.citical.left <- qf(p = 0.025,df1 = df1,df2 = df2)
# For visualization
x <- sort(rf(n = 100,df1 = df1,df2 = df2))
f.freq <- df(x = x,df1 = df1, df2 =df2)
plot(x = x,y = f.freq,type = "p")
abline(v = c(f.citical.left,f.citical.right,f.stat),c(1,1,2))
# For 7 days footfalls are recorded
s1 <- c(214,185,214,186,182,220,220)
s2 <-  c(171,185,236,175,227,198,172)
sd.s1<- sd(s1)
sd.s2 <-  sd(s2)
df1 <- 6
df2 <- 6
# Under null hypothesis, Sampling distribution or test statistic is F, df1 = df2 =6
# Two tailed test, critical points can be computes using signficance level of 5%
f.stat <- (sd.s1/sd.s2)^2
f.citical.right <- qf(p = 0.975,df1 = df1,df2 = df2)
f.citical.left <- qf(p = 0.025,df1 = df1,df2 = df2)
# For visualization
x <- sort(rf(n = 100,df1 = df1,df2 = df2))
f.freq <- df(x = x,df1 = df1, df2 =df2)
plot(x = x,y = f.freq,type = "p")
abline(v = c(f.citical.left,f.citical.right,f.stat),lty = c(1,1,2))
# For 7 days footfalls are recorded
s1 <- c(214,185,214,186,182,220,220)
s2 <-  c(171,185,236,175,227,198,172)
sd.s1<- sd(s1)
sd.s2 <-  sd(s2)
df1 <- 6
df2 <- 6
# Under null hypothesis, Sampling distribution or test statistic is F, df1 = df2 =6
# Two tailed test, critical points can be computes using signficance level of 5%
f.stat <- (sd.s1/sd.s2)^2
f.citical.right <- qf(p = 0.975,df1 = df1,df2 = df2)
f.citical.left <- qf(p = 0.025,df1 = df1,df2 = df2)
# For visualization
x <- sort(rf(n = 100,df1 = df1,df2 = df2))
f.freq <- df(x = x,df1 = df1, df2 =df2)
plot(x = x,y = f.freq,type = "p")
abline(v = c(f.citical.left,f.citical.right,f.stat),lty = c(2,2,1))
1/f.stat
# For 7 days footfalls are recorded
s1 <- c(214,185,214,186,182,220,220)
s2 <-  c(171,185,236,175,227,198,172)
sd.s1<- sd(s1)
sd.s2 <-  sd(s2)
df1 <- 6
df2 <- 6
# Under null hypothesis, Sampling distribution or test statistic is F, df1 = df2 =6
# Two tailed test, critical points can be computes using signficance level of 5%
f.stat <- (sd.s1/sd.s2)^2
1/f.stat
f.citical.right <- qf(p = 0.975,df1 = df1,df2 = df2)
f.citical.left <- qf(p = 0.025,df1 = df1,df2 = df2)
# For visualization
x <- sort(rf(n = 100,df1 = df1,df2 = df2))
f.freq <- df(x = x,df1 = df1, df2 =df2)
plot(x = x,y = f.freq,type = "p")
abline(v = c(f.citical.left,f.citical.right,f.stat),lty = c(2,2,1))
qf(p = 0.95,24,23)
qf(p = c(0.025,0.975),13,8)
qf(p = c(0.05,0.95),13,8)
# pooled sd of two samples
sd.pop.pooled <- sqrt((1.5^2 * (15-1) + 1.9^2 * (15-1)) / (15-1 + 15 -1 ))
# used to find std. error
std.error <- sqrt(sd.pop.pooled ^2 / 15 +  sd.pop.pooled ^2 / 15)
df <- (15 - 1) + (15 - 1)
# Take significance level as 5%
# Under null hypothesis, the difference of samples means is ditributed with t, with mean as 0
# and std. deviation as std.error
# The t statistic of observed sample differences
t <- (9.3 - 7.9) / std.error
t.crit <-  qt(p = 0.95,df = df,lower.tail = TRUE)
print(c(t,t.crit))
# For 7 days footfalls are recorded
s1 <- c(214,185,214,186,182,220,220)
s2 <-  c(171,185,236,175,227,198,172)
sd.s1<- sd(s1)
sd.s2 <-  sd(s2)
df1 <- 6
df2 <- 6
# Under null hypothesis, Sampling distribution or test statistic is F, df1 = df2 =6
# Two tailed test, critical points can be computes using signficance level of 5%
f.stat <- (sd.s1/sd.s2)^2
1/f.stat
f.citical.right <- qf(p = 0.975,df1 = df1,df2 = df2)
f.citical.left <- qf(p = 0.025,df1 = df1,df2 = df2)
# For visualization
x <- sort(rf(n = 100,df1 = df1,df2 = df2))
f.freq <- df(x = x,df1 = df1, df2 =df2)
plot(x = x,y = f.freq,type = "p")
abline(v = c(f.citical.left,f.citical.right,f.stat),lty = c(2,2,1))
expected.prop <- c(0.3,0.24,0.3,0.11,0.08)
sample <- c(35,16,1319,17)
expected.count < expected.prop * sum(sample)
expected.prop <- c(0.3,0.24,0.3,0.11,0.08)
sample <- c(35,16,1319,17)
expected.count <- expected.prop * sum(sample)
expected.prop <- c(0.3,0.24,0.3,0.11,0.08)
sample <- c(35,16,1319,17)
expected.count <- expected.prop * sum(sample)
# expected count is >5 for each category, assumption of large sample is satisfied
chsq.stat <- sum((sample - expected.count)^2 / expected.count)
chsq.stat
# Choice of significance level
qchisq(p = c(0.025,0.0975),df = 4)
expected.prop <- c(0.3,0.24,0.3,0.11,0.08)
sample <- c(35,16,13,19,17)
expected.count <- expected.prop * sum(sample)
# expected count is >5 for each category, assumption of large sample is satisfied
chsq.stat <- sum(((sample - expected.count)^2) / expected.count)
chsq.stat
# Choice of significance level
qchisq(p = c(0.025,0.0975),df = 4)
expected.prop <- c(0.3,0.24,0.3,0.11,0.05)
sample <- c(35,16,13,19,17)
expected.count <- expected.prop * sum(sample)
# expected count is >5 for each category, assumption of large sample is satisfied
chsq.stat <- sum(((sample - expected.count)^2) / expected.count)
chsq.stat
# Choice of significance level
qchisq(p = c(0.025,0.0975),df = 4)
expected.prop <- c(0.3,0.24,0.3,0.11,0.05)
sample <- c(35,16,13,19,17)
expected.count <- expected.prop * sum(sample)
# expected count is >5 for each category, assumption of large sample is satisfied
chsq.stat <- sum((((sample - expected.count)^2) / expected.count))
chsq.stat
# Choice of significance level
qchisq(p = c(0.025,0.0975),df = 4)
((sample - expected.count)^2) / expected.count)
(sample - expected.count)^2) / expected.count)
(sample - expected.count)^2 / expected.count
expected.prop <- c(0.3,0.24,0.3,0.11,0.05)
sample <- c(35,16,13,19,17)
expected.count <- expected.prop * sum(sample)
# expected count is >5 for each category, assumption of large sample is satisfied
chsq.stat <- sum((((sample - expected.count)^2) / expected.count))
chsq.stat
# Choice of significance level
qchisq(p = c(0.025,0.0975),df = 4)
